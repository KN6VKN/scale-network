# This file contains a list of commits that are not likely what you
# are looking for in a blame, such as mass reformatting or renaming.
# You can set this file as a default ignore file for blame by running
# the following command.
#
# $ git config blame.ignoreRevsFile .git-blame-ignore-revs
#
# To temporarily not use this file add
# --ignore-revs-file=""
# to your blame command.
#
# The ignoreRevsFile can't be set globally due to blame failing if the file isn't present.
# To not have to set the option in every repository it is needed in,
# save the following script in your path with the name "git-bblame"
# now you can run
# $ git bblame $FILE
# to use the .git-blame-ignore-revs file if it is present.
#
# #!/usr/bin/env bash
# repo_root=$(git rev-parse --show-toplevel)
# if [[ -e $repo_root/.git-blame-ignore-revs ]]; then
#     git blame --ignore-revs-file="$repo_root/.git-blame-ignore-revs" $@
# else
#     git blame $@
# fi

# treewide: format all nix files
fb2d2eb0d43c929476618294d0bc2aad48053f3c

# treewide: format/check all python files
a6f89f96d63f41ff9288101fc0ff7bfb41f69840

# treewide: format all markdown files
db1511b8ea56d20cad7d4b64ef496bca0880055f

# treewide: format all yaml files
8a46b1bc92473f5d8aed5963b0693831cad29d5f

# treewide: format all files
46d5946519fa77e4a04571c3a5fc81f76aa4f6c8
