name: ci
on:
  pull_request:
  push: # This is only run when PRs are merged into master
    branches:
      - master
  workflow_dispatch:
jobs:
  nix_checks:
    name: nix checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix build -L .#checks.x86_64-linux.pytest-facts
      - run: nix build -L .#checks.x86_64-linux.duplicates-facts
      - run: nix build -L .#checks.x86_64-linux.perl-switches
      - run: nix build -L .#checks.x86_64-linux.openwrt-golden
      - run: nix build -L .#checks.x86_64-linux.formatting
  nix_builds:
    name: nix builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix build -L .#massflash
      - run: nix build -L .#scaleInventory
      - run: nix build -L .#serverspec
  nixos_configs_get:
    name: nixos configurations get name
    runs-on: ubuntu-latest
    outputs:
      nixosconfignames: ${{ steps.nixosconfigsget.outputs.nixosconfignames }}
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Get all NixOS configurations
        id: nixosconfigsget
        run: |
          nixosconfignames=$(nix eval .\#nixosConfigurations --apply builtins.attrNames --json)
          echo "$nixosconfignames"
          echo "nixosconfignames=$nixosconfignames" >> $GITHUB_OUTPUT
  nixos_configs_build:
    name: build ${{ matrix.configName }} nixos configuration
    needs: nixos_configs_get
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configName: ${{ fromJSON(needs.nixos_configs_get.outputs.nixosconfignames) }}
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build ${{ matrix.configName }} nixos configuration
        run: |
          nix build -L .#nixosConfigurations.${{ matrix.configName }}.config.system.build.toplevel
